{"version":3,"sources":["utils/validator.js","components/App.js","constants/contract.js","index.js"],"names":["validateTokenId","tokenId","validateUrl","url","startsWith","ERROR_TOKEN_ID_TEXT","web3","Web3","givenProvider","App","contractMain","eth","Contract","CONTRACT_MAIN_ABI","contractSell","CONTRACT_SELL_ABI","useState","undefined","currentAccount","setCurrentAccount","setUrl","setTokenId","errors","setErrors","isDone","setIsDone","tokenIdPrice","setTokenIdPrice","price","setPrice","useEffect","window","ethereum","enable","accounts","currentProvider","selectedAddress","toLowerCase","handleSubmitMint","e","a","preventDefault","isValidUrl","isValidTokenId","methods","mint","send","from","message","handleSubmitSetPrice","isValidTokenIdPrice","isValidPrice","className","onSubmit","type","value","onChange","target","disabled","length","map","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8af34d62.chunk.js","sourcesContent":["export const validateTokenId = (tokenId) => {\n    return tokenId > 0;\n}\n\nexport const validateUrl = (url) => {\n    return url.startsWith('https://');\n}\n\nexport const ERROR_TOKEN_ID_TEXT = 'Wrong tokenId: It should be greater than 0';\nexport const ERROR_PRICE_TEXT = 'Wrong price: It should be greater than 0';\nexport const ERROR_URL_TEXT = 'Wrong url: It should starts with https://';\nexport const ERROR_CONTRACT_TEXT = 'Error with contract connection';","import React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\n\nimport {\n    validateUrl, validateTokenId, ERROR_TOKEN_ID_TEXT, ERROR_URL_TEXT, ERROR_CONTRACT_TEXT, ERROR_PRICE_TEXT\n} from \"../utils/validator\";\nimport { CONTRACT_ADDRESS_MAIN, CONTRACT_ADDRESS_SELL } from '../constants/contract';\nimport CONTRACT_MAIN_ABI from '../constants/mintNFT.json';\nimport CONTRACT_SELL_ABI from '../constants/sellNFT_CryptoArteSales.json';\n\nimport './App.css';\n\nconst web3 = new Web3(Web3.givenProvider);\n\nexport const App = () => {\n    const contractMain = new web3.eth.Contract(CONTRACT_MAIN_ABI, CONTRACT_ADDRESS_MAIN);\n    const contractSell = new web3.eth.Contract(CONTRACT_SELL_ABI, CONTRACT_ADDRESS_SELL);\n    const [currentAccount, setCurrentAccount] = useState(undefined);\n    const [url, setUrl] = useState('');\n    const [tokenId, setTokenId] = useState(null);\n    const [errors, setErrors] = useState([]);\n    const [isDone, setIsDone] = useState(false);\n\n    const handleChangeTokenId = (e) => setTokenId(+e.target.value || null);\n    const handleChangeUrl = (e) => setUrl(e.target.value);\n\n    const [tokenIdPrice, setTokenIdPrice] = useState(null);\n    const [price, setPrice] = useState(null);\n\n    const handleChangePrice = (e) => setPrice(+e.target.value || null);\n    const handleChangeTokenIdPrice = (e) => setTokenIdPrice(+e.target.value || null);\n\n    useEffect(() => {\n        window.ethereum.enable();\n        setCurrentAccount(web3.eth.accounts.currentProvider.selectedAddress.toLowerCase());\n    }, []);\n\n    const handleSubmitMint = async (e) => {\n        e.preventDefault();\n        try {\n            setErrors([]);\n            setIsDone(false);\n            const isValidUrl = validateUrl(url);\n            const isValidTokenId = validateTokenId(tokenId);\n\n            if (!isValidUrl) {\n                setErrors((errors) => [...errors, ERROR_URL_TEXT]);\n            }\n            if (!isValidTokenId) {\n                setErrors((errors) => [...errors, ERROR_TOKEN_ID_TEXT]);\n            }\n            if (!currentAccount) {\n                setErrors((errors) => [...errors, ERROR_CONTRACT_TEXT]);\n            }\n\n            if (currentAccount && isValidTokenId && isValidUrl) {\n                await contractMain.methods.mint(currentAccount, tokenId, url).send({ from: currentAccount });\n                setIsDone(true);\n            }\n        } catch (e) {\n            setErrors([e.message]);\n        }\n    };\n\n    const handleSubmitSetPrice = async (e) => {\n        e.preventDefault();\n        try {\n            const isValidTokenIdPrice = validateTokenId(tokenIdPrice);\n            const isValidPrice = validateTokenId(price);\n\n            if (!isValidTokenIdPrice) {\n                setErrors((errors) => [...errors, ERROR_TOKEN_ID_TEXT]);\n            }\n            if (!isValidPrice) {\n                setErrors((errors) => [...errors, ERROR_PRICE_TEXT]);\n            }\n\n            if (currentAccount && isValidTokenIdPrice && isValidPrice) {\n                await contractSell.methods.mint(tokenIdPrice, price).send({ from: currentAccount });\n            }\n        } catch (e) {\n            setErrors([e.message]);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App__header\">NFT Marketplace</header>\n            <div className=\"App__content\">\n                <form className=\"App__form\" onSubmit={handleSubmitMint}>\n                    <label className=\"App__form__label\">\n                        TokenId:\n                        <input className=\"App__form__input\" type=\"number\" value={tokenId} onChange={handleChangeTokenId} />\n                    </label>\n                    <label className=\"App__form__label\">\n                        Url:\n                        <input className=\"App__form__input\" type=\"text\" value={url} onChange={handleChangeUrl} />\n                    </label>\n                    <input type=\"submit\" className=\"App__form__button\" disabled={!tokenId || !url} value=\"Mint\" />\n                </form>\n\n                <form className=\"App__form\" onSubmit={handleSubmitSetPrice}>\n                    <label className=\"App__form__label\">\n                        TokenId:\n                        <input className=\"App__form__input\" type=\"number\" value={tokenIdPrice} onChange={handleChangeTokenIdPrice} />\n                    </label>\n                    <label className=\"App__form__label\">\n                        Price:\n                        <input className=\"App__form__input\" type=\"number\" value={price} onChange={handleChangePrice} />\n                    </label>\n                    <input type=\"submit\" className=\"App__form__button\" disabled={!tokenIdPrice || !price} value=\"Set price\" />\n                </form>\n            </div>\n            {\n                !!errors.length && (\n                    <div className=\"App__errors\">\n                        {errors.map((error) => (\n                            <div key={error} className=\"App__errors__error\">{error}</div>\n                        ))}\n                    </div>\n                )\n            }\n            { isDone && <div className=\"App__done\">DONE</div> }\n        </div>\n    );\n}\n","// From https://ropsten.etherscan.io/address/0x5c007a1d8051dfda60b3692008b9e10731b67fde\n\nexport const CONTRACT_ADDRESS_MAIN = '0x5C007A1d8051DFDa60B3692008b9e10731b67FDE';\nexport const CONTRACT_ADDRESS_SELL = '0x5C007A1d8051DFDa60B3692008b9e10731b67FDE'; // TODO: найти нужный адрес\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}